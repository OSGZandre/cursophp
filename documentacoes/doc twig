É importante saber que as chaves não fazem parte da variável, mas sim da instrução print. Ao acessar variáveis ​​dentro de tags, não as coloque entre chaves.

EX: {% if name != false %}
        {% for row in name %}
        <h2> Lucky number: {{ number }} </h2> // ENTRE DUAS CHAMADAS FAZ A CHAMADA
        <h2> Nome: {{ row.name }} </h2>    // ENTRE DUAS CHAMADAS FAZ A CHAMADA
        <hr />
        {% endfor %}
    {% endif %}
    
    
Se uma variável ou atributo não existir

Quando false, ele retorna null;
Quando true, ele lança uma exceção.


Você pode atribuir valores a variáveis ​​dentro de blocos de código. As atribuições usam a tag set :

{% set name = 'Fabien' %}
{% set numbers = [1, 2] %}
{% set map = {'city': 'Paris'} %}


Usar argumentos nomeados torna seus modelos mais explícitos sobre o significado dos valores que você passa como argumentos:

{{ data|convert_encoding('UTF-8', 'iso-2022-jp') }}

{# versus #}

{{ data|convert_encoding(from: 'iso-2022-jp', to: 'UTF-8') }}
Argumentos




Argumentos nomeados também permitem que você ignore alguns argumentos para os quais você não deseja alterar o valor padrão:

{# the first argument is the date format, which defaults to the global date format if null is passed #}
{{ "now"|date(null, "Europe/Paris") }}

{# or skip the format value by using a named argument for the time zone #}
{{ "now"|date(timezone: "Europe/Paris") }}

